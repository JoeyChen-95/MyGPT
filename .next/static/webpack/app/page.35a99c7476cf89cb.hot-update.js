"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./styles/markdown.css":
/*!*****************************!*\
  !*** ./styles/markdown.css ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"548bc250422c\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3N0eWxlcy9tYXJrZG93bi5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy9tYXJrZG93bi5jc3M/YjU1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjU0OGJjMjUwNDIyY1wiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./styles/markdown.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/home/Main/ChatInput.tsx":
/*!********************************************!*\
  !*** ./components/home/Main/ChatInput.tsx ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ChatInput; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _components_AppContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/AppContext */ \"(app-pages-browser)/./components/AppContext.tsx\");\n/* harmony import */ var _components_EventBusContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/EventBusContext */ \"(app-pages-browser)/./components/EventBusContext.tsx\");\n/* harmony import */ var _components_common_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/common/Button */ \"(app-pages-browser)/./components/common/Button.tsx\");\n/* harmony import */ var _reducers_AppReducer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/reducers/AppReducer */ \"(app-pages-browser)/./reducers/AppReducer.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react_icons_fi__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-icons/fi */ \"(app-pages-browser)/./node_modules/react-icons/fi/index.mjs\");\n/* harmony import */ var react_icons_md__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-icons/md */ \"(app-pages-browser)/./node_modules/react-icons/md/index.mjs\");\n/* harmony import */ var react_icons_pi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-icons/pi */ \"(app-pages-browser)/./node_modules/react-icons/pi/index.mjs\");\n/* harmony import */ var react_textarea_autosize__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-textarea-autosize */ \"(app-pages-browser)/./node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.development.esm.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\nfunction ChatInput() {\n    _s();\n    // Users' input message\n    const [messageText, setMessageText] = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(\"\");\n    const stopRef = (0,react__WEBPACK_IMPORTED_MODULE_5__.useRef)(false);\n    const chatIdRef = (0,react__WEBPACK_IMPORTED_MODULE_5__.useRef)(\"\");\n    // Get message, model from global context\n    const { state: { messageList, currentModel, streamingId, selectedChat }, dispatch } = (0,_components_AppContext__WEBPACK_IMPORTED_MODULE_1__.useAppContext)();\n    const { publish, subscribe, unsubscribe } = (0,_components_EventBusContext__WEBPACK_IMPORTED_MODULE_2__.useEventBusContext)();\n    (0,react__WEBPACK_IMPORTED_MODULE_5__.useEffect)(()=>{\n        const callback = (data)=>{\n            send(data);\n        };\n        subscribe(\"createNewChat\", callback);\n        return ()=>unsubscribe(\"fetchChatList\", callback);\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_5__.useEffect)(()=>{\n        var _selectedChat, _selectedChat1;\n        if (chatIdRef.current === ((_selectedChat = selectedChat) === null || _selectedChat === void 0 ? void 0 : _selectedChat.id)) {\n            return;\n        }\n        var _selectedChat_id;\n        chatIdRef.current = (_selectedChat_id = (_selectedChat1 = selectedChat) === null || _selectedChat1 === void 0 ? void 0 : _selectedChat1.id) !== null && _selectedChat_id !== void 0 ? _selectedChat_id : \"\" // if id is null, copy a empty string\n        ;\n        stopRef.current = true // we need to interrupt receiving \n        ;\n    }, [\n        selectedChat\n    ]);\n    async function createorUpdateMessage(message) {\n        const response = await fetch(\"api/message/update\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(message)\n        });\n        //check response code\n        if (!response.ok) {\n            console.log(response.statusText);\n            return;\n        }\n        const { data } = await response.json();\n        if (!chatIdRef.current) {\n            chatIdRef.current = data.message.chatId;\n            publish(\"fetchChatList\");\n            dispatch({\n                type: _reducers_AppReducer__WEBPACK_IMPORTED_MODULE_4__.ActionType.UPDATE,\n                field: \"selectedChat\",\n                value: {\n                    id: chatIdRef.current\n                }\n            });\n        }\n        return data.message;\n    }\n    async function deleteMessage(id) {\n        const response = await fetch(\"/api/message/delete?id=\".concat(id), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        //check response code\n        if (!response.ok) {\n            console.log(response.statusText);\n            return;\n        }\n        const { code } = await response.json();\n        return code === 0;\n    }\n    async function send(content) {\n        var _selectedChat;\n        //current message\n        const message = await createorUpdateMessage({\n            id: \"\",\n            role: \"user\",\n            content,\n            chatId: chatIdRef.current\n        });\n        //get message list\n        const messages = messageList.concat([\n            message\n        ]);\n        //add this message to the global state\n        dispatch({\n            type: _reducers_AppReducer__WEBPACK_IMPORTED_MODULE_4__.ActionType.ADD_MESSAGE,\n            message\n        });\n        doSend(messages);\n        if (!((_selectedChat = selectedChat) === null || _selectedChat === void 0 ? void 0 : _selectedChat.title) || selectedChat.title === \"New Chat\") {\n            updateChatTitle(messages);\n        }\n    }\n    async function updateChatTitle(messages) {\n        const message = {\n            id: \"\",\n            role: \"user\",\n            content: \"Use 5 to 10 words to directly return to the brief topic of this sentence. No explanation, no punctuation, no modal particles, and no redundant text. If there is no topic, please return directly to 'New Chat'\",\n            chatId: chatIdRef.current\n        };\n        // Save the chatId in a temp variable, prevent switch chat when generating title\n        const chatId = chatIdRef.current;\n        // integrate into one body, with current model\n        const body = {\n            messages: [\n                ...messages,\n                message\n            ],\n            model: currentModel\n        };\n        /* Send Message */ let response = await fetch(\"api/chat\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        });\n        //check response code\n        if (!response.ok) {\n            console.log(response.statusText);\n            return;\n        }\n        //check body ok\n        if (!response.body) {\n            console.log(\"body error\");\n            return;\n        }\n        /* Receive Message */ //Get the returned data stream\n        const reader = response.body.getReader();\n        const decoder = new TextDecoder();\n        //flag: whether the GPT finishes \n        let done = false;\n        //temp variable to store the GPT returned message\n        let title = \"\";\n        while(!done){\n            const result = await reader.read();\n            done = result.done;\n            //decode the stream into string\n            const chunk = decoder.decode(result.value);\n            //attach the decoded chunk to my content\n            title += chunk;\n        }\n        response = await fetch(\"api/chat/update\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                id: chatId,\n                title\n            })\n        });\n        //check response code\n        if (!response.ok) {\n            console.log(response.statusText);\n            return;\n        }\n        const { code } = await response.json();\n        if (code === 0) {\n            //publish event: update chat list\n            publish(\"fetchChatList\");\n        }\n    }\n    async function resend() {\n        const messages = [\n            ...messageList\n        ];\n        if (messages.length !== 0 && messages[messageList.length - 1].role === \"assistant\") {\n            //delete the message in server side(delete in database)\n            const result = await deleteMessage(messages[messages.length - 1].id);\n            if (!result) {\n                console.log(\"delete error\");\n                return;\n            }\n            //delete the last message from the global state and the temp message list\n            dispatch({\n                type: _reducers_AppReducer__WEBPACK_IMPORTED_MODULE_4__.ActionType.REMOVE_MESSAGE,\n                message: messages[messages.length - 1]\n            });\n            messages.splice(messages.length - 1, 1);\n        }\n        doSend(messages);\n    }\n    // Send message\n    async function doSend(messages) {\n        stopRef.current = false;\n        // integrate into one body, with current model\n        const body = {\n            messages,\n            model: currentModel\n        };\n        //clear current message\n        setMessageText(\"\");\n        //use the controller to close the stream\n        const controller = new AbortController();\n        const response = await fetch(\"api/chat\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            //to interrupt the stream\n            signal: controller.signal,\n            body: JSON.stringify(body)\n        });\n        //check response code\n        if (!response.ok) {\n            console.log(response.statusText);\n            return;\n        }\n        //check body ok\n        if (!response.body) {\n            console.log(\"body error\");\n            return;\n        }\n        //GPT returned message\n        //generated in server side\n        const responseMessage = await createorUpdateMessage({\n            id: \"\",\n            role: \"assistant\",\n            content: \"\",\n            chatId: chatIdRef.current\n        });\n        dispatch({\n            type: _reducers_AppReducer__WEBPACK_IMPORTED_MODULE_4__.ActionType.ADD_MESSAGE,\n            message: responseMessage\n        });\n        //set streaming id(while continuous)\n        dispatch({\n            type: _reducers_AppReducer__WEBPACK_IMPORTED_MODULE_4__.ActionType.UPDATE,\n            field: \"streamingId\",\n            value: responseMessage.id\n        });\n        //Get the returned data stream\n        const reader = response.body.getReader();\n        const decoder = new TextDecoder();\n        //flag: whether the GPT finishes \n        let done = false;\n        //temp variable to store the GPT returned message\n        let content = \"\";\n        while(!done){\n            if (stopRef.current) {\n                controller.abort();\n                break;\n            }\n            const result = await reader.read();\n            done = result.done;\n            //decode the stream into string\n            const chunk = decoder.decode(result.value);\n            //attach the decoded chunk to my content\n            content += chunk;\n            //update content \n            dispatch({\n                type: _reducers_AppReducer__WEBPACK_IMPORTED_MODULE_4__.ActionType.UPDATE_MESSAGE,\n                message: {\n                    ...responseMessage,\n                    content\n                }\n            });\n        }\n        createorUpdateMessage({\n            ...responseMessage,\n            content\n        });\n        //stream done, clear streaming id\n        dispatch({\n            type: _reducers_AppReducer__WEBPACK_IMPORTED_MODULE_4__.ActionType.UPDATE,\n            field: \"streamingId\",\n            value: \"\"\n        });\n        //clear user message\n        setMessageText(\"\");\n    }\n    // The chat's input box, absoulte at the bottom, with a shadow\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"absolute bottom-0 inset-x-0 bg-gradient-to-b from-[rgba(255,255,255,0)] from-[13.94%] to-[#fff] to-[54.73%] pt-10 dark:from-[rgba(53,55,64,0)] dark:to-[#353740] dark:to-[58.85%]\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"w-full max-w-4xl mx-auto flex flex-col items-center px-4 space-y-4\",\n            children: [\n                messageList.length !== 0 && (streamingId !== \"\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_common_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    icon: react_icons_pi__WEBPACK_IMPORTED_MODULE_6__.PiStopBold,\n                    variant: \"primary\",\n                    onClick: ()=>{\n                        stopRef.current = true;\n                    },\n                    className: \"font-medium\",\n                    children: \"Stop Generating\"\n                }, void 0, false, {\n                    fileName: \"/Users/chenjunjian/Code/MyGPT/components/home/Main/ChatInput.tsx\",\n                    lineNumber: 293,\n                    columnNumber: 25\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_common_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    icon: react_icons_md__WEBPACK_IMPORTED_MODULE_7__.MdRefresh,\n                    variant: \"primary\",\n                    onClick: resend,\n                    className: \"font-medium\",\n                    children: \"Regenerate\"\n                }, void 0, false, {\n                    fileName: \"/Users/chenjunjian/Code/MyGPT/components/home/Main/ChatInput.tsx\",\n                    lineNumber: 304,\n                    columnNumber: 25\n                }, this)),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-end w-full border border-black/10 dark:border-gray-800/50 bg-white dark:bg-gray-700 rounded-lg shadow-[0_0_15px_rgba(0,0,0,0.1)] py-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mx-3 mb-2.5\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_pi__WEBPACK_IMPORTED_MODULE_6__.PiLightningFill, {}, void 0, false, {\n                                fileName: \"/Users/chenjunjian/Code/MyGPT/components/home/Main/ChatInput.tsx\",\n                                lineNumber: 319,\n                                columnNumber: 25\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/chenjunjian/Code/MyGPT/components/home/Main/ChatInput.tsx\",\n                            lineNumber: 318,\n                            columnNumber: 21\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_textarea_autosize__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                            /* Input style: resize-none: No manual zoom in/out  \n                        border-0: Remove border\n                        outline-none: Hide the default browser outline on focused elements. \n                        */ className: \"outline-none flex-1 max-h-64 mb-1.5 bg-transparent text-black dark:text-white resize-none border-0\",\n                            placeholder: \"First message...\",\n                            rows: 1,\n                            value: messageText,\n                            onChange: (e)=>{\n                                setMessageText(e.target.value);\n                            }\n                        }, void 0, false, {\n                            fileName: \"/Users/chenjunjian/Code/MyGPT/components/home/Main/ChatInput.tsx\",\n                            lineNumber: 321,\n                            columnNumber: 21\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_common_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                            className: \"mx-3 !rounded-lg\",\n                            icon: react_icons_fi__WEBPACK_IMPORTED_MODULE_9__.FiSend,\n                            disabled: messageText.trim() === \"\" || streamingId !== \"\",\n                            variant: \"primary\",\n                            onClick: ()=>{\n                                send(messageText);\n                            }\n                        }, void 0, false, {\n                            fileName: \"/Users/chenjunjian/Code/MyGPT/components/home/Main/ChatInput.tsx\",\n                            lineNumber: 335,\n                            columnNumber: 21\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/chenjunjian/Code/MyGPT/components/home/Main/ChatInput.tsx\",\n                    lineNumber: 316,\n                    columnNumber: 17\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"footer\", {\n                    className: \"text-center text-sm text-gray-700 dark:text-gray-300 px-4 pb-6\",\n                    children: [\n                        \"\\xa9️\",\n                        new Date().getFullYear(),\n                        \"\\xa0 Based on APIs provided by the third party\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/chenjunjian/Code/MyGPT/components/home/Main/ChatInput.tsx\",\n                    lineNumber: 345,\n                    columnNumber: 17\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/chenjunjian/Code/MyGPT/components/home/Main/ChatInput.tsx\",\n            lineNumber: 289,\n            columnNumber: 13\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/chenjunjian/Code/MyGPT/components/home/Main/ChatInput.tsx\",\n        lineNumber: 288,\n        columnNumber: 9\n    }, this);\n}\n_s(ChatInput, \"BrtXi0G+4PdLVc+gszNuJ1RPE/4=\", false, function() {\n    return [\n        _components_AppContext__WEBPACK_IMPORTED_MODULE_1__.useAppContext,\n        _components_EventBusContext__WEBPACK_IMPORTED_MODULE_2__.useEventBusContext\n    ];\n});\n_c = ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/home/Main/ChatInput.tsx\n"));

/***/ })

});